# Import Your libraries
library(tidyverse)
shiny::runApp()
runApp()
runApp()
runApp()
?fluidRow
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/aau-private-space/modular_template_rshiny/modules/plot_timeline_module.R')
shiny::runApp()
source('~/aau-private-space/modular_template_rshiny/modules/modify_time_module.R')
df <- read.csv("~/aau-private-space/modular_template_rshiny/whack-a-mole.csv", sep=";")
View(df)
# Generate a random number and insert as a new row in our dataset.
df %>% add_row(Event = "Synthetic Mole",
GameTimeSpent = runif(1,min=min(GameTimeSpent), max=max(GameTimeSpent)),
MoleActivatedDuration = runif(1,min=min(MoleActivatedDuration),max=max(MoleActivatedDuration)))
# Generate a random number and insert as a new row in our dataset.
df %>% add_row(Event = "Synthetic Mole",
GameTimeSpent = runif(1,min=min(GameTimeSpent), max=max(GameTimeSpent)),
MoleActivatedDuration = runif(1,min=min(MoleActivatedDuration),max=max(MoleActivatedDuration)))
maxTime = max(GameTimeSpent)
maxTime = max(df$GameTimeSpent)
synthTime = runif(1,min=minTime, max=MaxTime)
maxTime = max(df$GameTimeSpent)
minTime = min(df$GameTimeSpent)
maxActivation = max(MoleActivatedDuration)
minActivation = min(MoleACtivatedDuration)
maxTime = max(df$GameTimeSpent)
minTime = min(df$GameTimeSpent)
maxActivation = max(df$MoleActivatedDuration)
minActivation = min(df$MoleACtivatedDuration)
synthTime = runif(1,min=minTime, max=MaxTime)
synthTime = runif(1,min=minTime, max=MaxTime)
?runif
synthTime = runif(1,min=minTime, max=maxTime)
synthTime = runif(1,min=minTime, max=maxTime)
synthActivation = runif(1, mni=minActivation, max=maxActivation)
synthActivation = runif(1, min=minActivation, max=maxActivation)
# Generate a random number and insert as a new row in our dataset.
df %>% add_row(Event = "Synthetic Mole",
GameTimeSpent = synthTime,
MoleActivatedDuration = synthActivation)
minActivation = min(df$MoleACtivatedDuration, na.rm=T)
minActivation = min(df$MoleACtivatedDuration)
maxActivation = max(df$MoleActivatedDuration)
minActivation = min(df$MoleACtivatedDuration)
?min
maxTime = max(df$GameTimeSpent)
minTime = 0
maxActivation = max(df$MoleActivatedDuration)
minActivation = 0
synthTime = runif(1,min=minTime, max=maxTime)
synthActivation = runif(1, min=minActivation, max=maxActivation)
# Generate a random number and insert as a new row in our dataset.
df %>% add_row(Event = "Synthetic Mole",
GameTimeSpent = synthTime,
MoleActivatedDuration = synthActivation)
# Generate a random number and insert as a new row in our dataset.
df %>% add_row(Event = "Synthetic Mole",
GameTimeSpent = synthTime,
MoleActivatedDuration = synthActivation)
# Generate a random number and insert as a new row in our dataset.
df %>% add_row(Event = "Synthetic Mole",
GameTimeSpent = synthTime,
MoleActivatedDuration = synthActivation)
runApp()
runApp()
?actionButton
runApp()
runApp()
runApp()
runApp()
runApp()
?fluidRow
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?validatae
?validate
?req
runApp()
runApp()
runApp()
shiny::runApp()
df_data
df_data$Event
summary(df_data)
runApp()
log2021.05.14.11.50.26.5625Sample <- read.csv("~/aau-projects/Supervision/MTA21635/MTA21635_Additional_Material/log2021-05-14 11-50-26.5625Sample.csv", sep=";")
View(log2021.05.14.11.50.26.5625Sample)
library(plotly)
plotly(data=log2021.05.14.11.50.26.5625Sample, x=~Framecount, y=~BCIConfidence)
plotly() %>% add_trace(data=log2021.05.14.11.50.26.5625Sample, x=~Framecount, y=~BCIConfidence, mode='markers', type='scatter')
df2 = log2021.05.14.11.50.26.5625Sample
plotly() %>% add_trace(data=df2, x=~Framecount, y=~BCIConfidence, mode='markers', type='scatter')
plot_ly() %>% add_trace(data=df2, x=~Framecount, y=~BCIConfidence, mode='markers', type='scatter')
plot_ly() %>% add_trace(data=df2, x=~Timestamp, y=~BCIConfidence, mode='markers', type='scatter')
plot_ly() %>% add_trace(data=df2, x=~Timestamp, y=~BCIConfidence, mode='lines', type='scatter')
plot_ly() %>% add_trace(data=df2, x=~Timestamp, y=~BCIConfidence, mode='lines', type='scatter') %>% add_trace(x=c('2021-05-14 11:50:29.4770', '2021-05-14 11:50:49.1269'), y=c('0.53','0.53'), mode='lines', type='scatter')
plot_ly() %>% add_trace(data=df2, x=~Timestamp, y=~BCIConfidence, mode='lines', type='scatter')
plot_ly() %>% add_trace(data=df2, x=~Timestamp, y=~BCIConfidence, mode='lines', type='scatter') %>% layout(xaxis=list(dtick=0.75))
plot_ly() %>% add_trace(data=df2, x=~Timestamp, y=~BCIConfidence, mode='lines', type='scatter') %>% layout(xaxis=list(dtick=50))
plot_ly() %>% add_trace(data=df2, x=~Timestamp, y=~BCIConfidence, mode='lines', type='scatter') %>% layout(xaxis=list(dtick=500))
plot_ly() %>% add_trace(data=df2, x=~Timestamp, y=~BCIConfidence, mode='lines', type='scatter') %>% layout(xaxis=list(dtick=5000))
plot_ly() %>% add_trace(data=df2, x=~Timestamp, y=~BCIConfidence, mode='lines', type='scatter') %>% layout(xaxis=list(dtick=50))
plot_ly() %>% add_trace(data=df2, x=~Timestamp, y=~BCIConfidence, mode='lines', type='scatter') %>% layout(xaxis=list(dtick=250))
plot_ly() %>% add_trace(data=df2, x=~Timestamp, y=~BCIConfidence, mode='lines', type='scatter') %>% layout(xaxis=list(dtick=250)) %>% add_trace(x=c('2021-05-14 11:50:29.4770', '2021-05-14 11:50:49.1269'), y=c('0.53','0.53'), mode='lines', type='scatter')
plot_ly() %>% add_trace(data=df2, x=~Timestamp, y=~BCIConfidence, mode='lines', type='scatter') %>% layout(xaxis=list(dtick=250)) %>% add_trace(x=c('2021-05-14 11:50:29.4770', '2021-05-14 11:59:49.1269'), y=c('0.53','0.53'), mode='lines', type='scatter')
options("digits.secs"=1)
plot_ly() %>% add_trace(data=df2, x=~Timestamp, y=~BCIConfidence, mode='lines', type='scatter') %>% layout(xaxis=list(dtick=250)) %>% add_trace(x=c('2021-05-14 11:50:29.4770', '2021-05-14 11:59:49.1269'), y=c('0.53','0.53'), mode='lines', type='scatter')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(df)
runApp()
runApp()
df_vis %>% ggplot(aes(x =MoleIndexX,y = MoleActivatedDuration))
df_vis %>% ggplot(aes(x =MoleIndexX,y = MoleActivatedDuration))
df_vis$MoleIndexX
df_vis$MoleActivatedDuration
df_vis %>% ggplot(aes(x =MoleIndexX, y = MoleActivatedDuration)) + theme_bw()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
df
df
df()
runApp()
df
df()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
